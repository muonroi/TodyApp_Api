// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RemindApp.Data.Persistence;

#nullable disable

namespace RemindApp.Data.Persistence.Migrations
{
    [DbContext(typeof(RemindAppDbContext))]
    [Migration("20250412145835_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MLanguage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(16);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(20);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(21);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(18);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(25);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(24);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<string>("Icon")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(19);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(22);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(17);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(23);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_MLanguages_Name");

                    b.ToTable("MLanguages");
                });

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(15);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(19);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(20);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(17);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(24);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(23);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnOrder(4);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(18);

                    b.Property<bool>("IsGranted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(21);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(16);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(22);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_MPermissions_Name");

                    b.ToTable("MPermissions");
                });

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MRefreshToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(19);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(23);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(24);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(21);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(28);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(27);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(22);

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(25);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(20);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(26);

                    b.Property<DateTime>("LastUsedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(6);

                    b.Property<string>("ReasonRevoked")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(7);

                    b.Property<DateTime?>("RevokedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(5);

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<string>("TokenValidityKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("MRefreshTokens");
                });

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(7);

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(18);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(22);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(23);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(20);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(27);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(26);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(21);

                    b.Property<bool>("IsStatic")
                        .HasColumnType("boolean")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(24);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(19);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(25);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(2);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_MRoles_Name");

                    b.ToTable("MRoles");
                });

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MRolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(14);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(18);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(19);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(16);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(23);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(22);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(17);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(20);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(15);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(21);

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("MRolePermissions");
                });

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(16);

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(31);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(35);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(36);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(33);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(40);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(39);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnOrder(3);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnOrder(13);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(34);

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnOrder(12);

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnOrder(9);

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnOrder(11);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(37);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(32);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(38);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(4);

                    b.Property<string>("NormalizedEmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnOrder(15);

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnOrder(14);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(6);

                    b.Property<string>("PasswordResetCode")
                        .HasColumnType("text")
                        .HasColumnOrder(7);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnOrder(8);

                    b.Property<int?>("ProfilePictureId")
                        .HasColumnType("integer")
                        .HasColumnOrder(18);

                    b.Property<string>("Salt")
                        .HasColumnType("text")
                        .HasColumnOrder(17);

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(10);

                    b.Property<bool>("ShouldChangePasswordOnNextLogin")
                        .HasColumnType("boolean")
                        .HasColumnOrder(19);

                    b.Property<DateTime?>("SignInTokenExpireTimeUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(20);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(5);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("IX_MUser_UserName");

                    b.ToTable("MUsers");
                });

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MUserLoginAttempt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AttemptTime")
                        .HasColumnType("integer")
                        .HasColumnOrder(8);

                    b.Property<string>("BrowserInfo")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnOrder(6);

                    b.Property<string>("ClientIpAddress")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(4);

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(5);

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(20);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(24);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(25);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(22);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(29);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(28);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(23);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(26);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(21);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(27);

                    b.Property<DateTime>("LockTo")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(9);

                    b.Property<byte>("Result")
                        .HasColumnType("smallint")
                        .HasColumnOrder(7);

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<string>("UserNameOrEmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("UserNameOrEmailAddress")
                        .HasDatabaseName("IX_MUserLoginAttempt_UserNameOrEmailAddress");

                    b.ToTable("MUserLoginAttempts");
                });

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(2);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(3);

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(14);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(18);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(19);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(16);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(23);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(22);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(17);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(20);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(15);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(21);

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("MUserRoles");
                });

            modelBuilder.Entity("Muonroi.BuildingBlock.External.Entity.Identity.MUserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("CreatedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(17);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(21);

                    b.Property<Guid>("CreatorUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(22);

                    b.Property<double?>("DeletedDateTS")
                        .HasColumnType("double precision")
                        .HasColumnOrder(19);

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(26);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(25);

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnOrder(20);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(23);

                    b.Property<double?>("LastModificationTimeTs")
                        .HasColumnType("double precision")
                        .HasColumnOrder(18);

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnType("uuid")
                        .HasColumnOrder(24);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(4);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("LoginProvider")
                        .HasDatabaseName("IX_MUserToken_LoginProvider");

                    b.ToTable("MUserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
